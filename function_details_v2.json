[
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "PromptLoader",
        "function_name": "__init__",
        "parameters": [
            "self",
            "yaml_file_path",
            "context"
        ],
        "return_type": "None",
        "docstring": "Initializes the PromptLoader class.\n\nArgs:\n    yaml_file_path (str): Path to the YAML file containing the prompts.\n    context (dict, optional): Dictionary of context values to render the prompts. \n                               Defaults to an empty dictionary.",
        "dependencies": [
            "load_prompts"
        ]
    },
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "PromptLoader",
        "function_name": "load_prompts",
        "parameters": [
            "self"
        ],
        "return_type": "None",
        "docstring": "Loads and renders prompts from the specified YAML file using context values.\n\nThis method reads the YAML file and parses the `user_prompt` and `system_prompt` fields.\nIf context values are provided, the prompts are rendered using Jinja2 templates.\n\nRaises:\n    FileNotFoundError: If the YAML file is not found.\n    yaml.YAMLError: If there is an error in parsing the YAML file.\n    Exception: If any other error occurs during template rendering.",
        "dependencies": [
            "open",
            "safe_load",
            "Template",
            "Template",
            "render",
            "render",
            "print",
            "print",
            "print",
            "get",
            "get"
        ]
    },
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "PromptLoader",
        "function_name": "get_user_prompt",
        "parameters": [
            "self"
        ],
        "return_type": "None",
        "docstring": "Retrieves the rendered user prompt.\n\nReturns:\n    str: The user prompt rendered with the provided context.",
        "dependencies": []
    },
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "PromptLoader",
        "function_name": "get_system_prompt",
        "parameters": [
            "self"
        ],
        "return_type": "None",
        "docstring": "Retrieves the rendered system prompt.\n\nReturns:\n    str: The system prompt rendered with the provided context.",
        "dependencies": []
    },
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "GenerateGoal",
        "function_name": "__init__",
        "parameters": [
            "self",
            "model_name",
            "provider_name"
        ],
        "return_type": "None",
        "docstring": "Initializes the GenerateGoal class.\n\nArgs:\n    model_name (str): The name of the language model to be used.\n    provider_name (str): The name of the provider for the language model.",
        "dependencies": [
            "Path"
        ]
    },
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "GenerateGoal",
        "function_name": "call_llm",
        "parameters": [
            "self",
            "prompt",
            "system_msg",
            "get_json"
        ],
        "return_type": "None",
        "docstring": "Calls the language model to generate a response based on the given prompt.\n\nArgs:\n    prompt (str): The user prompt to send to the language model.\n    system_msg (str): The system message to guide the language model's behavior.\n    get_json (bool): Flag to indicate whether the response should be in JSON format. Defaults to True.\n\nReturns:\n    tuple: A tuple containing:\n        - str: The response content generated by the language model.\n        - float: The time taken for the model to generate the response.",
        "dependencies": [
            "Groq",
            "debug",
            "time",
            "create",
            "time",
            "replace"
        ]
    },
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "GenerateGoal",
        "function_name": "replace_quotes",
        "parameters": [
            "string"
        ],
        "return_type": "None",
        "docstring": "Replaces single quotes in a string with double quotes to ensure valid JSON format.\n\nArgs:\n    string (str): The input string with single quotes.\n\nReturns:\n    str: The string with single quotes replaced by double quotes.",
        "dependencies": [
            "sub",
            "sub",
            "sub",
            "sub",
            "sub",
            "sub"
        ]
    },
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "GenerateGoal",
        "function_name": "extract_json_string",
        "parameters": [
            "response"
        ],
        "return_type": "None",
        "docstring": "Extracts the JSON object as a string from the given response.\n\nArgs:\n    response (str): The raw response string from the language model.\n\nReturns:\n    str: The extracted JSON string, ensuring balanced braces.",
        "dependencies": [
            "find",
            "count",
            "count",
            "rfind"
        ]
    },
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "GenerateGoal",
        "function_name": "_postprocess_response",
        "parameters": [
            "response"
        ],
        "return_type": "None",
        "docstring": "Post-processes the response to extract a valid JSON schema.\n\nArgs:\n    response (str): The raw response string from the language model.\n\nReturns:\n    str: The valid JSON string extracted and formatted from the response.",
        "dependencies": [
            "replace_quotes",
            "extract_json_string"
        ]
    },
    {
        "file_name": "/Users/jaylodha/Desktop/chillmate/app/backend/chatbot/generate_goals.py",
        "class_name": "GenerateGoal",
        "function_name": "generate",
        "parameters": [
            "self",
            "context"
        ],
        "return_type": "Dict",
        "docstring": "Generates goals based on the provided context using prompts and the language model.\n\nArgs:\n    context (dict): A dictionary containing context values- user_query and ext_json\n\n    ext_json format:\n    ```\n    {\n        'goal': '[Original goal/problem]',\n        'subtasks': [\n            {\n                'subtask': '[Description of subtask 1]',\n                'importance': '[Explanation of why this subtask is necessary]',\n                'focus': '[What the student should concentrate on for this subtask]'\n            },\n        ]\n    }\n    ```\n\nReturns:\n    dict: The parsed output from the language model in dictionary format.",
        "dependencies": [
            "PromptLoader",
            "call_llm",
            "loads",
            "get_user_prompt",
            "get_system_prompt",
            "_postprocess_response",
            "error"
        ]
    }
]